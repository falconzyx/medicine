app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: Navidata Chatflow with Project Name
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/azure_openai:0.0.4@d6253f93fb83b1942a788e09c302c8fd4704de28585b48a16ac07a03869f33ef
kind: app
version: 0.2.0
workflow:
  conversation_variables:
  - description: If user mentions a specific project_id, then return 1. If user specifies
      all projects, then return 0.
    id: 5ffdd961-f2fd-4255-a2c5-c661b9bc6608
    name: current_is_project_site_filter
    selector:
    - conversation
    - current_is_project_site_filter
    value: 0
    value_type: number
  - description: If the user mentions a specific project ID (e.g., project_id = 2,
      project 5), extract and set it as `5`.
    id: a6819b85-0ac0-4f68-88a7-ed79cd14baf8
    name: current_project_id
    selector:
    - conversation
    - current_project_id
    value: 0
    value_type: number
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: true
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: question-classifier
        targetType: http-request
      id: 1741909024900-1-1741909845031-target
      selected: false
      source: '1741909024900'
      sourceHandle: '1'
      target: '1741909845031'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: llm
      id: 1741909845031-source-1741910276051-target
      selected: false
      source: '1741909845031'
      sourceHandle: source
      target: '1741910276051'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: parameter-extractor
        targetType: code
      id: 1741913502067-source-1741915036578-target
      selected: false
      source: '1741913502067'
      sourceHandle: source
      target: '1741915036578'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: http-request
      id: 1741909024900-1742182919951-17421829661550-target
      selected: false
      source: '1741909024900'
      sourceHandle: '1742182919951'
      target: '17421829661550'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: llm
      id: 17421829661550-source-17421829889240-target
      selected: false
      source: '17421829661550'
      sourceHandle: source
      target: '17421829889240'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 17421829889240-source-17421829984030-target
      selected: false
      source: '17421829889240'
      sourceHandle: source
      target: '17421829984030'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: http-request
      id: 1742919813099-2-17429183642730-target
      selected: false
      source: '1742919813099'
      sourceHandle: '2'
      target: '17429183642730'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 17429210010740-source-17429210614500-target
      selected: false
      source: '17429210010740'
      sourceHandle: source
      target: '17429210614500'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1741915036578-source-1741918400220-target
      selected: false
      source: '1741915036578'
      sourceHandle: source
      target: '1741918400220'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1741918400220-source-answer-target
      selected: false
      source: '1741918400220'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: answer
      id: 1742919813099-1742919978492-17419100748750-target
      selected: false
      source: '1742919813099'
      sourceHandle: '1742919978492'
      target: '17419100748750'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: parameter-extractor
      id: 1742919813099-1742919957256-1742932885451-target
      selected: false
      source: '1742919813099'
      sourceHandle: '1742919957256'
      target: '1742932885451'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: parameter-extractor
        targetType: question-classifier
      id: 1742932885451-source-1741909024900-target
      selected: false
      source: '1742932885451'
      sourceHandle: source
      target: '1741909024900'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1741910276051-source-1741913502067-target
      selected: false
      source: '1741910276051'
      sourceHandle: source
      target: '1741913502067'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: llm
      id: 17429183642730-source-17429210010740-target
      selected: false
      source: '17429183642730'
      sourceHandle: source
      target: '17429210010740'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1743184049217-true-1742920967624-target
      selected: false
      source: '1743184049217'
      sourceHandle: 'true'
      target: '1742920967624'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: question-classifier
      id: 1743184049217-false-1742919813099-target
      selected: false
      source: '1743184049217'
      sourceHandle: 'false'
      target: '1742919813099'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: assigner
        targetType: if-else
      id: 1743185478198-source-1743184049217-target
      selected: false
      source: '1743185478198'
      sourceHandle: source
      target: '1743184049217'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: parameter-extractor
        targetType: assigner
      id: 1743185740047-source-1743185478198-target
      selected: false
      source: '1743185740047'
      sourceHandle: source
      target: '1743185478198'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1743183242879-source-1743185740047-target
      selected: false
      source: '1743183242879'
      sourceHandle: source
      target: '1743185740047'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: llm
      id: 17431878992720-source-1743188003659-target
      selected: false
      source: '17431878992720'
      sourceHandle: source
      target: '1743188003659'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1743188003659-source-1743183242879-target
      selected: false
      source: '1743188003659'
      sourceHandle: source
      target: '1743183242879'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: question-classifier
      id: 1741907934263-source-1743519049332-target
      selected: false
      source: '1741907934263'
      sourceHandle: source
      target: '1743519049332'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1743519067048-source-1743519076427-target
      selected: false
      source: '1743519067048'
      sourceHandle: source
      target: '1743519076427'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: http-request
      id: 1743519049332-2-17431878992720-target
      selected: false
      source: '1743519049332'
      sourceHandle: '2'
      target: '17431878992720'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: agent
        targetType: answer
      id: 1743882676688-source-1743882314671-target
      selected: false
      source: '1743882676688'
      sourceHandle: source
      target: '1743882314671'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: code
      id: 1743519049332-1-17440714158190-target
      source: '1743519049332'
      sourceHandle: '1'
      target: '17440714158190'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 17440714158190-source-1743519067048-target
      source: '17440714158190'
      sourceHandle: source
      target: '1743519067048'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: question-classifier
        targetType: agent
      id: 1743519049332-1743882272448-1743882676688-target
      source: '1743519049332'
      sourceHandle: '1743882272448'
      target: '1743882676688'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables: []
      height: 66
      id: '1741907934263'
      position:
        x: -582.7464322005128
        y: -854.3442106858986
      positionAbsolute:
        x: -582.7464322005128
        y: -854.3442106858986
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1741918400220.text#}}'
        desc: ''
        selected: false
        title: Answer
        type: answer
        variables: []
      height: 122
      id: answer
      position:
        x: 4799.688615217349
        y: 602.7624140225461
      positionAbsolute:
        x: 4799.688615217349
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 'Topic Name: Equipment Inquiry


            Classify all questions related to medical equipment, including:

            - Equipment details like specifications, availability, procurement status,
            and department assignments.

            - Finding specific equipment based on name, department, vendor, floor,
            or other attributes.

            - Aggregation queries such as total count, sum, average, min, max, standard
            deviation, or variance.

            - Looking up available values within a field (e.g., "Which departments
            are listed?", "What vendors are used?").'
        - id: '1742182919951'
          name: 'Topic Name: "Equipment Data Attributes"

            Prompt: Classify all questions related to available equipment data attributes,
            including column names, queryable fields, and information users can ask
            about. This class should trigger the table column API to retrieve the
            list of available attributes and format the response accordingly.'
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        query_variable_selector:
        - '1741907934263'
        - sys.query
        selected: false
        title: Question Classifier
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 745
      id: '1741909024900'
      position:
        x: 2985.6066244791036
        y: 402.9263754129955
      positionAbsolute:
        x: 2985.6066244791036
        y: 402.9263754129955
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-13
            key: ''
            type: text
            value: "{\n    \"resource\": \"data_table\",\n    \"action\": \"get\"\
              ,\n    \"data\": {\n       \"project_id\": {{#1742932885451.project_id#}},\n\
              \"is_project_site_filter\": {{#1742932885451.is_project_site_filter#}},\n\
              \        \"site_id\": 2,\n        \"view_name\": \"vw_equipment_cols\"\
              \n    }\n}"
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get Column Definition
        type: http-request
        url: https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud
        variables: []
      height: 228
      id: '1741909845031'
      position:
        x: 3308.03105453576
        y: 602.7624140225461
      positionAbsolute:
        x: 3308.03105453576
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'Hi! I''m Navidata AI

          How can I help?'
        desc: ''
        selected: false
        title: Answer
        type: answer
        variables: []
      height: 142
      id: '17419100748750'
      position:
        x: 2620.685003187759
        y: 676.2784233340765
      positionAbsolute:
        x: 2620.685003187759
        y: 676.2784233340765
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 6cb0e58b-c9bb-4022-a763-9871fb803551
          role: system
          text: "\U0001F539 AI Assistant Prompt for API Request Construction\nYou\
            \ are an AI assistant responsible for constructing API request parameters\
            \ for retrieving equipment data.\n\n\U0001F6E0 Task: Build the following\
            \ 3 parameters in your JSON output:\n- filter_list: an array of filters\
            \ to narrow down query results\n- select_column_names: a list of raw column\
            \ names or aggregation functions to retrieve\n- group_by: an array of\
            \ columns used for grouping (only if needed)\n\n\U0001F4E5 User Query:\n\
            {{#sys.query#}}\n\n\U0001F4E6 Column Definitions:\n{{#1741909845031.body#}}\n\
            \n---\n\n1️⃣ Extract filter_list\nIdentify keywords that match column\
            \ values and filter them using valid column names from:\n→ column_definition_response.result[].column_name\n\
            \nComparison Operators Mapping:\n- \"greater than\", \"more than\", \"\
            above\" → \">\"\n- \"less than\", \"under\", \"below\" → \"<\"\n- \"at\
            \ least\", \"minimum\" → \">=\"\n- \"at most\", \"maximum\" → \"<=\"\n\
            - \"contains\", \"includes\" → \"LIKE\" (no wildcards)\n- \"not equal\
            \ to\", \"different from\", \"is not\" → \"!=\"\n- \"in\", \"among\",\
            \ \"one of\" → \"=\" (multiple values joined as a string)\n- Otherwise\
            \ → \"=\"\n\nFormat:\n{\n  \"name\": \"<column_name>\",\n  \"operator\"\
            : \"<comparison_operator>\",\n  \"value\": \"<string_value>\"\n}\nAlways\
            \ return filter_list as an array (empty if not applicable).\n\n---\n\n\
            2️⃣ Extract select_column_names (important update!)\nRules:\n- If the\
            \ user explicitly requests \"average\", \"sum\", \"count\", etc., use\
            \ that aggregation.\n- If no aggregation is mentioned, use the raw column\
            \ name (e.g., \"budget_unit_cost\").\n- Never assume aggregation unless\
            \ clearly stated.\n- Do not mix aggregation and raw fields unless group_by\
            \ is present.\n\nFormat:\n\"select_column_names\": [\n  \"<column_name>\"\
            ,\n  \"AGG_FUNCTION(column_name)\" (only if explicitly mentioned)\n]\n\
            \n✅ Supported Aggregations:\nSUM, COUNT, AVG, MIN, MAX, STDEV, VAR\n\n\
            ---\n\n3️⃣ Extract group_by (if needed)\nRules:\n- Only include group_by\
            \ if aggregation is mixed with raw columns.\n- All non-aggregated columns\
            \ in select_column_names must be present in group_by.\n- If only aggregation\
            \ is used, return an empty group_by.\n\n---\n\n\U0001F4E4 Output Structure:\n\
            {\n  \"filter_list\": [...],\n  \"select_column_names\": [...],\n  \"\
            group_by\": [...]\n}\n\n---\n\n\U0001F4DD Example Expected Output (for:\
            \ \"what is the budget unit cost for 'Well chamber' in all projects\"\
            )\n{\n  \"filter_list\": [\n    {\n      \"name\": \"name\",\n      \"\
            operator\": \"=\",\n      \"value\": \"Well chamber\"\n    }\n  ],\n \
            \ \"select_column_names\": [\n    \"budget_unit_cost\"\n  ],\n  \"group_by\"\
            : []\n}\n"
        selected: false
        title: Build API Request Body
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1741910276051'
      position:
        x: 3606.9046863709414
        y: 602.7624140225461
      positionAbsolute:
        x: 3606.9046863709414
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        parameters:
        - description: "Extract relevant filtering conditions from the user's query\
            \ and structure them in the format:\n[\n    { \"name\": \"<column_name>\"\
            , \"operator\": \"<operator>\", \"value\": \"<user-specified value>\"\
            \ }\n]\n\n- Use **natural language understanding** to match user intent\
            \ with the correct database fields.\n- Convert user-friendly terms into\
            \ **column names** (e.g., \"ICU department\" → `equipment_current_department`).\n\
            - Identify comparison operators based on user intent:\n    - \"=\" for\
            \ direct matches (e.g., \"Find all equipment in the ICU\").\n    - \"\
            >\" or \"<\" for numerical values (e.g., \"Show me equipment costing more\
            \ than $2000\").\n    - \"LIKE\" for keyword-based searches (e.g., \"\
            Find all monitors\").\n- Ensure extracted values match the **expected\
            \ data type**.\n\nReturn only the structured list of filter conditions."
          name: filter_list
          required: true
          type: array[object]
        - description: "Extract the list of properties or aggregation functions the\
            \ user wants to retrieve and structure them as:\n[\n  \"<column_name>\"\
            ,\n  \"<AGG_FUNCTION(column_name)>\"\n]\n\nGuidelines:\n- Match user-requested\
            \ fields or aggregations with valid column names.\n- If aggregations are\
            \ mentioned, format them properly:\n  - SUM → \"SUM(column_name)\"\n \
            \ - COUNT → \"COUNT(column_name)\"\n  - AVG → \"AVG(column_name)\"\n \
            \ - MIN → \"MIN(column_name)\"\n  - MAX → \"MAX(column_name)\"\n  - STDEV\
            \ → \"STDEV(column_name)\"\n  - VAR → \"VAR(column_name)\"\n- Do **not**\
            \ include non-aggregated fields unless grouping is mentioned.\n- Return\
            \ an empty array if no properties or aggregations are specified.\n"
          name: selected_properties
          required: true
          type: array[string]
        - description: "Extract any grouping column(s) the user requested and structure\
            \ them as:\n[\n  \"<grouping_column_1>\",\n  \"<grouping_column_2>\"\n\
            ]\n\nGuidelines:\n- Only extract grouping fields if the user asked for\
            \ aggregation **per** something (e.g., \"total per vendor\").\n- Ensure\
            \ the extracted column names are valid and present in column definitions.\n\
            - Return an empty array if no grouping is required or mentioned."
          name: group_by
          required: true
          type: array[string]
        query:
        - '1741910276051'
        - text
        reasoning_mode: prompt
        selected: false
        title: Parameter Extractor
        type: parameter-extractor
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - sys
            - files
          enabled: false
      height: 111
      id: '1741913502067'
      position:
        x: 3925.3836277503588
        y: 602.7624140225461
      positionAbsolute:
        x: 3925.3836277503588
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nimport requests\n\ndef main(filter_list, select_column_names,\
          \ group_by, project_id, is_project_site_filter, resource):\n    # Define\
          \ API Endpoint\n    api_url = \"https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud\"\
          \n\n    # Construct the request payload\n    is_data_table = resource ==\
          \ \"data_table\"\n    request_body = {\n        \"resource\": resource,\n\
          \        \"action\": \"get\",\n        \"data\": {\n            \"project_id\"\
          : project_id,\n            \"is_project_site_filter\": is_project_site_filter,\n\
          \            \"site_id\": 0,\n            \"view_name\": \"vw_equipment\"\
          ,\n            \"filter_list\": filter_list if filter_list else [],  # Ensure\
          \ it's an empty list if none\n            \"selected_properties\": select_column_names,\
          \ \n            \"group_by\": [] if is_data_table else group_by\n      \
          \  }\n    }\n    print(request_body)\n\n    # Define headers (Modify based\
          \ on your API requirements)\n    headers = {\n        \"Content-Type\":\
          \ \"application/json\",\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY\"\
          \  # Replace with actual token if required\n    }\n\n    try:\n        #\
          \ Send HTTP Request\n        response = requests.post(api_url, json=request_body,\
          \ headers=headers)\n        \n        # Convert response to JSON string\n\
          \        if response.status_code == 200:\n            return {\"result\"\
          : json.dumps(response.json())}  # Return dictionary with result as string\n\
          \        else:\n            return {\"result\": json.dumps({\"error\": f\"\
          Request failed with status {response.status_code}: {response.text}\"})}\n\
          \n    except Exception as e:\n        return {\"result\": json.dumps({\"\
          error\": str(e)})}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get vw_equipment Table Data
        type: code
        variables:
        - value_selector:
          - '1741913502067'
          - filter_list
          variable: filter_list
        - value_selector:
          - '1741913502067'
          - selected_properties
          variable: select_column_names
        - value_selector:
          - '1741913502067'
          - group_by
          variable: group_by
        - value_selector:
          - conversation
          - current_project_id
          variable: project_id
        - value_selector:
          - conversation
          - current_is_project_site_filter
          variable: is_project_site_filter
        - value_selector:
          - '1742932885451'
          - resource
          variable: resource
      height: 66
      id: '1741915036578'
      position:
        x: 4218.682325736541
        y: 602.7624140225461
      positionAbsolute:
        x: 4218.682325736541
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.2
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 235ce680-1534-486d-bffe-ef4b655c51dc
          role: system
          text: 'You are an AI assistant that provides concise and accurate answers
            based on the API response.

            User Query: {{#sys.query#}}

            API Table Query Response: {{#1741915036578.result#}}

            Instructions:

            1. If the API response contains relevant data for the user query, summarize
            it concisely.

            2. If the API response does **not** include information matching the query
            but a relevant column (like `floor`, `floor_id`) exists, inform the user
            that no data was found for that field.

            3. If an error occurred in the API response, return: "There was an issue
            retrieving the data. Please try again later."

            4. If multiple results exist, summarize them briefly.

            '
        selected: false
        title: Response Formatter
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1741918400220'
      position:
        x: 4508.127931438173
        y: 602.7624140225461
      positionAbsolute:
        x: 4508.127931438173
        y: 602.7624140225461
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-13
            key: ''
            type: text
            value: "{\n    \"resource\": \"data_table\",\n    \"action\": \"get\"\
              ,\n    \"data\": {\n       \"project_id\": {{#1742932885451.project_id#}},\n\
              \"is_project_site_filter\": {{#1742932885451.is_project_site_filter#}},\n\
              \        \"site_id\": 2,\n        \"view_name\": \"vw_equipment_cols\"\
              \n    }\n}"
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get Column Definition
        type: http-request
        url: https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud
        variables: []
      height: 228
      id: '17421829661550'
      position:
        x: 3295.25417101699
        y: 809.1861314850888
      positionAbsolute:
        x: 3295.25417101699
        y: 809.1861314850888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 235ce680-1534-486d-bffe-ef4b655c51dc
          role: system
          text: 'You are an AI assistant that provides concise and accurate answers
            based on the API response.

            User Query: {{#sys.query#}}

            API Table Query Response: {{#17421829661550.body#}}

            Instructions:

            Extract the most relevant information from API Table Definition Query
            Response to answer User Query.

            If multiple results exist, summarize them briefly.

            If no relevant data is found, respond with: "No matching results found."

            If an error occurred in the API response, return: "There was an issue
            retrieving the data. Please try again later."'
        selected: false
        title: Response Formatter (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '17421829889240'
      position:
        x: 3606.9046863709414
        y: 809.1861314850888
      positionAbsolute:
        x: 3606.9046863709414
        y: 809.1861314850888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#17421829889240.text#}}'
        desc: ''
        selected: false
        title: Answer
        type: answer
        variables: []
      height: 122
      id: '17421829984030'
      position:
        x: 3925.3836277503588
        y: 809.1861314850888
      positionAbsolute:
        x: 3925.3836277503588
        y: 809.1861314850888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-13
            key: ''
            type: text
            value: "{\n    \"resource\": \"data_table\",\n    \"action\": \"get\"\
              ,\n    \"data\": {\n        \"project_id\": 0,\n        \"site_id\"\
              : 0,\n        \"view_name\": \"vw_project\",\n        \"is_project_site_filter\"\
              : 0,\n        \"selected_properties\": [\n            \"id\",\n    \
              \        \"name\"\n        ]\n    }\n}"
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get Project Options
        type: http-request
        url: https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud
        variables: []
      height: 228
      id: '17429183642730'
      position:
        x: 2669.1749024153346
        y: 53.53629357634483
      positionAbsolute:
        x: 2669.1749024153346
        y: 53.53629357634483
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '2'
          name: "    Topic Name: Project Options Inquiry\n    Prompt:\n    Classify\
            \ questions where the user is asking which projects they can select from\
            \ — trying to browse or list available project options. Do not include\
            \ questions asking for data.\n\n✅ Match if the user says:\n\n    \"What\
            \ projects can I view?\"\n\n    \"Which project IDs are available?\"\n\
            \n    \"Which project ID is ___ project?\"\n\n    \"Can I see the list\
            \ of projects?\"\n\n\U0001F6AB Do NOT match if:\n\n    The query includes\
            \ project 5, project_id = 2, or “for all projects”\n\n    The user asks\
            \ for actual data or aggregations"
        - id: '1742919957256'
          name: "    Topic Name: Scoped Project Queries\n    Prompt:\n    Classify\
            \ all questions where the user specifies a project scope by:\n\n    Including\
            \ a numeric project ID (e.g., project 2, project_id = 4)\n\n    Or requesting\
            \ data for all projects (e.g., “for all projects”, “across every job”,\
            \ “entire system”, “entire dataset”)\n\nThis class enables targeted queries\
            \ either by specific project or across all projects.\n\n✅ Match if:\n\n\
            \    The user says: project 4, project id = 3, project number 12\n\n \
            \   The user says:\n\n        “for all projects”\n\n        “across all\
            \ jobs”\n\n        “entire system”\n\n        “entire dataset”\n\nExamples:\
            \ ✅ “Show me the equipment in project 2”\n✅ “What’s the total cost for\
            \ all projects?”\n✅ “How many ventilators across every project?”\n\n\U0001F6AB\
            \ Do NOT match if:\n\n    The query only includes a project name like\
            \ “KCC” or “Demo Project” (no ID or ‘all projects’ reference)"
        - id: '1742919978492'
          name: 'Topic Name: "General Questions"

            Prompt: Classify questions that are unrelated to medical equipment data.
            This includes general inquiries, system usage, AI-related queries, and
            other non-equipment-related topics.'
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        query_variable_selector:
        - '1743188003659'
        - text
        selected: false
        title: Question Classifier 2
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 1248
      id: '1742919813099'
      position:
        x: 2294.893222474474
        y: -75.48976291328367
      positionAbsolute:
        x: 2294.893222474474
        y: -75.48976291328367
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 'To retrieve accurate results, please include one of the following
          in your question:

          - A project ID (e.g., project id 2)

          - A request for all projects (e.g., “Show results for all projects”)

          - Ask “What project options can I view data for?” to get the full list.'
        desc: ''
        selected: true
        title: Answer
        type: answer
        variables: []
      height: 282
      id: '1742920967624'
      position:
        x: 2356.46935217592
        y: -471.1405713184802
      positionAbsolute:
        x: 2356.46935217592
        y: -471.1405713184802
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: f97cbd79-916c-42ec-a2e4-12a391d61a63
          role: system
          text: "You are an AI assistant that helps users explore available project\
            \ options for filtering equipment data.\n\n\U0001F4E6 API Response:\n\
            {{#17429183642730.body#}}\n\n\U0001F9E0 User Query:\n{{#sys.query#}}\n\
            \n\U0001F3AF Your Task:\n\n1. Parse the list of projects from the API\
            \ response. Each project contains:\n   - `name` (project name)\n   - `id`\
            \ (project ID)\n\n2. Check if the user query is asking for:\n   - **All\
            \ projects** → If yes, return the full project list, formatted as:\n \
            \    - [Project Name] (project id [ID])\n     - Example: NCC - CC (project\
            \ id 5)\n     - Display as bullet points\n     - End with: \"Or choose\
            \ **all projects** if you want to explore data across the entire system.\"\
            \n     - Close with: \"Please let me know which project you'd like to\
            \ explore by referencing its project ID (e.g., project id 5), or 'all\
            \ projects' to view data system-wide.\"\n\n3. If the user mentions a **specific\
            \ project name** (e.g., “What is the project ID for KCC?”):\n   - Perform\
            \ a case-insensitive match against the `name` values in the API response.\n\
            \   - If a match is found, return:\n     - \"**KCC** corresponds to **project\
            \ id 2**.\"\n   - If no match is found, return:\n     - \"Sorry, I couldn't\
            \ find a project matching that name. Please try again or ask to view all\
            \ available project options.\"\n\n\U0001F4DD Important:\n- Do not hallucinate\
            \ or guess project IDs.\n- Only return the ID if an exact match (ignoring\
            \ case) is found in the API response.\n"
        selected: false
        title: Response Formatter
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '17429210010740'
      position:
        x: 2985.6066244791036
        y: 53.53629357634483
      positionAbsolute:
        x: 2985.6066244791036
        y: 53.53629357634483
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#17429210010740.text#}}'
        desc: ''
        selected: false
        title: 'Answer '
        type: answer
        variables: []
      height: 122
      id: '17429210614500'
      position:
        x: 3322.13452590322
        y: 53.53629357634483
      positionAbsolute:
        x: 3322.13452590322
        y: 53.53629357634483
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        parameters:
        - description: "Extract the project ID mentioned in the user’s query.\n  \
            \  Only extract if the user explicitly refers to a project number (e.g.,\
            \ “project 2”, “data for project 14”).\n\n    If no project number is\
            \ found in the query, return null.\n\nExamples:\n\n    “Show me data for\
            \ project 5” → \"project_id\": 5\n\n    “Compare cost across all projects”\
            \ → \"project_id\": null\n\nReturn only the numeric value of the project\
            \ ID or null."
          name: project_id
          required: true
          type: number
        - description: "Determine whether the query is project-specific or cross-project\
            \ based on user intent.\n\n    If the query includes a specific project\
            \ ID, return 1.\n\n    If the user asks for data across all projects,\
            \ or no project is mentioned at all, return 0.\n\nExamples:\n\n    “For\
            \ project 5, show me the total budget” → is_project_site_filter: 1\n\n\
            \    “Which departments have the highest cost?” → is_project_site_filter:\
            \ 0\n\nReturn only 0 or 1 depending on whether the query should be scoped\
            \ to a project."
          name: is_project_site_filter
          required: true
          type: number
        - description: "Determine whether the user is asking for aggregated data or\
            \ detailed records, and set the correct API resource type.\n\nRules:\n\
            1. If the user query involves aggregation (e.g., \"total\", \"sum\", \"\
            average\", \"count\", \"max\", \"min\", \"standard deviation\", \"variance\"\
            ), return `\"data_agg\"`.\n   - This includes queries like:\n     - \"\
            What is the total budget for each department?\"\n     - \"How many ventilators\
            \ are in the ICU?\"\n     - \"Show the average cost of equipment\"\n\n\
            2. If the user is asking to list or view raw records (e.g., \"list all\"\
            , \"show me equipment\", \"which devices are installed\", \"display equipment\
            \ details\", \"cost for this item\"), return `\"data_table\"`.\n\n3. Aggregation\
            \ can also be inferred from selected fields like:\n   - `\"SUM(...)\"\
            `, `\"COUNT(...)\"`, `\"AVG(...)\"`, `\"MIN(...)\"`, `\"MAX(...)\"`, `\"\
            STDEV(...)\"`, `\"VAR(...)\"` → return `\"data_agg\"`\n   - If all selected_properties\
            \ are plain column names (no functions) → return `\"data_table\"`\n\n\
            Return only the string `\"data_agg\"` or `\"data_table\"` as the final\
            \ result."
          name: resource
          required: true
          type: string
        query:
        - sys
        - query
        reasoning_mode: prompt
        selected: false
        title: Parameter Extractor
        type: parameter-extractor
        variables: []
        vision:
          configs:
            detail: high
            variable_selector:
            - sys
            - files
          enabled: false
      height: 111
      id: '1742932885451'
      position:
        x: 2655.789955946328
        y: 428.8883469173992
      positionAbsolute:
        x: 2655.789955946328
        y: 428.8883469173992
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1743188003659'
          - text
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 26d1b223-e872-4239-88b5-91b3d888593b
          role: system
          text: "You are an assistant that determines the correct project context\
            \ from the user's query and existing memory.\n\nUser Query:\n{{#context#}}\n\
            \nSaved Memory:\n- current_project_id = {{#conversation.current_project_id#}}\n\
            - current_is_project_site_filter = {{#conversation.current_is_project_site_filter#}}\n\
            \nYour task is to extract **two numeric parameters** based on the logic\
            \ below:\n\n---\n\n\U0001F4CC Logic Rules:\n\n1. **If the user query mentions\
            \ a specific project ID**\n   - Examples: “project 5”, “project_id = 2”,\
            \ “data for project 10”\n   → Set:\n     - current_project_id = the number\
            \ (e.g., 5)\n     - current_is_project_site_filter = 1\n\n2. **If the\
            \ user query mentions all projects**\n   - Examples: “for all projects”,\
            \ “entire system”, “across every job”\n   → Set:\n     - current_project_id\
            \ = 0\n     - current_is_project_site_filter = 0\n\n3. **If the query\
            \ includes no project context**\n   → Check memory:\n     - If memory\
            \ contains values (not -1), reuse them.\n\n4. **If neither the query nor\
            \ memory contains valid project context**\n   → Set:\n     - current_project_id\
            \ = -1\n     - current_is_project_site_filter = -1\n\n---\n\nReturn only\
            \ the extracted numeric values.\n"
        selected: false
        title: EXTRACT PROJ CONTEXT
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1743183242879'
      position:
        x: 884.3006780496721
        y: -215.8666377465172
      positionAbsolute:
        x: 884.3006780496721
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: '='
            id: 8cad0e54-999c-4362-a82b-775410c81dbf
            value: '-1'
            varType: number
            variable_selector:
            - conversation
            - current_is_project_site_filter
          - comparison_operator: '='
            id: 5f263f96-edfa-4bce-9617-419e528b30c3
            value: '-1'
            varType: number
            variable_selector:
            - conversation
            - current_project_id
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE
        type: if-else
      height: 189
      id: '1743184049217'
      position:
        x: 1870.1548799132538
        y: -215.8666377465172
      positionAbsolute:
        x: 1870.1548799132538
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        items:
        - input_type: variable
          operation: over-write
          value:
          - '1743185740047'
          - current_is_project_site_filter
          variable_selector:
          - conversation
          - current_is_project_site_filter
          write_mode: over-write
        - input_type: variable
          operation: over-write
          value:
          - '1743185740047'
          - current_project_id
          variable_selector:
          - conversation
          - current_project_id
          write_mode: over-write
        selected: false
        title: Variable Assigner
        type: assigner
        version: '2'
      height: 141
      id: '1743185478198'
      position:
        x: 1540.6611994053328
        y: -215.8666377465172
      positionAbsolute:
        x: 1540.6611994053328
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        parameters:
        - description: Extract the numeric project ID from the user query (e.g., “project
            5” → 5). Set to 0 if the query is about all projects. Set to -1 if the
            user doesn't mention a project context.
          name: current_project_id
          required: true
          type: number
        - description: Set to 1 if the user query mentions a specific project ID.
            Set to 0 if the query is for all projects. Set to -1 if no project context
            is provided.
          name: current_is_project_site_filter
          required: true
          type: number
        query:
        - '1743183242879'
        - text
        reasoning_mode: prompt
        selected: false
        title: Parameter Extractor
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1743185740047'
      position:
        x: 1202.9754309658483
        y: -215.8666377465172
      positionAbsolute:
        x: 1202.9754309658483
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-13
            key: ''
            type: text
            value: "{\n    \"resource\": \"data_table\",\n    \"action\": \"get\"\
              ,\n    \"data\": {\n        \"project_id\": 0,\n        \"site_id\"\
              : 0,\n        \"view_name\": \"vw_project\",\n        \"is_project_site_filter\"\
              : 0,\n        \"selected_properties\": [\n            \"id\",\n    \
              \        \"name\"\n        ]\n    }\n}"
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get Project Options
        type: http-request
        url: https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud
        variables: []
      height: 228
      id: '17431878992720'
      position:
        x: 260.438283563644
        y: -215.8666377465172
      positionAbsolute:
        x: 260.438283563644
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 50bbf1a6-9b3b-4795-9bc2-2e1f45b1b498
          role: system
          text: "You are an AI assistant that helps convert user queries by replacing\
            \ project names with their corresponding project IDs.\n\n\U0001F4E6 API\
            \ Response:\n{{#17431878992720.body#}}\n\n\U0001F9E0 User Query:\n{{#sys.query#}}\n\
            \n\U0001F3AF Your Task:\n\n1. Parse the list of projects from the API\
            \ response. Each project contains:\n   - `name` (project name)\n   - `id`\
            \ (project ID)\n\n2. Identify if the user query includes a project **name**\
            \ (e.g., \"KCC\", \"Demo Project\", etc.).\n\n3. Perform a **case-insensitive\
            \ match** between the project name in the user query and the `name` field\
            \ in the API response.\n\n4. If a match is found:\n   - Replace the project\
            \ name in the user query with the format: `project id [ID]`\n   - Example:\
            \ `\"What is the total budget for KCC?\"` → `\"What is the total budget\
            \ for project id 2?\"`\n\n5. If no match is found:\n   - Return the original\
            \ query unchanged.\n\n\U0001F4DD Important:\n- Do not add any explanation.\n\
            - Return only the modified (or original) user query as plain text."
        - id: 677034d1-cc9b-47d7-b34c-012ef37264cc
          role: user
          text: ''
        selected: false
        title: REPLACE PROJ NAME W/ ID
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1743188003659'
      position:
        x: 584.5447475968645
        y: -215.8666377465172
      positionAbsolute:
        x: 584.5447475968645
        y: -215.8666377465172
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: "Class 1 – Room-Based Equipment Recommendations\n\nTopic Name: Room-Based\
            \ Equipment Recommendation\n\nPrompt Description:\nClassify any question\
            \ where the user is asking about what equipment is needed or recommended\
            \ for specific room types or clinical templates. These questions are often\
            \ related to predefined spaces like “Triage,” “Trauma,” or “Resuscitation,”\
            \ and are intended to assist in room setup, outfitting, or quantity guidance\
            \ per room.\n\n✅ Match Examples:\n\n    “What equipment do I need for\
            \ an assessment/triage room?”\n\n    “How many beds are required for a\
            \ trauma room?”\n\n    “List required devices for an ICU room.”\n\n  \
            \  “What are the standard supplies in a resuscitation room?”\n\n    “What’s\
            \ the recommended setup for an isolation room?”\n\n\U0001F50D Keywords\
            \ to look for:\n“room,” “per room,” “exam room,” “trauma,” “resuscitation,”\
            \ “template,” “setup,” “standard room requirements,” “recommended,” “equipment\
            \ per room”\n\n❌ DO NOT MATCH IF:\n\n    The user is referencing projects,\
            \ vendors, costs, or total inventory\n\n    The question is not tied to\
            \ a physical room, template, or clinical space\n\n    The user is asking\
            \ general or vague system questions"
        - id: '2'
          name: "Class 2 – General / Project / Non-Room Inquiries\n\nTopic Name: Project-Based\
            \ or System-Wide Equipment Inquiries\n\nPrompt Description:\nClassify\
            \ questions that ask about equipment at the project or system level, rather\
            \ than room-specific setups. These include questions about procurement,\
            \ cost, usage summaries, vendor ownership, or total inventory across multiple\
            \ rooms or projects.\n\n✅ Match Examples:\n\n    “How many total equipment\
            \ items are in project 2?”\n\n    “What’s the total cost of equipment\
            \ in BH2BCC?”\n\n    “List all vendors and their equipment.”\n\n    “Which\
            \ projects can I get data for?”\n\n    “Show me the status of all infusion\
            \ pumps.”\n\n\U0001F50D Keywords to look for:\n“project,” “project id,”\
            \ “vendor,” “system-wide,” “cost,” “total,” “ownership,” “equipment list,”\
            \ “across all projects,” “procurement,” “status”\n\n❌ DO NOT MATCH IF:\n\
            \n    The question is tied to setting up or outfitting a specific room\n\
            \n    The user references room names or asks “per room” quantities\n\n\
            \    The question is ambiguous or unrelated to inventory metadata"
        - id: '1743882272448'
          name: "Class 3 – Catch-All / Other Inquiries\n\nTopic Name: General, Conversational,\
            \ or Unsupported Questions\n\nPrompt Description:\nCatch all questions\
            \ that don’t fit into Class 1 or Class 2. These include conversational,\
            \ ambiguous, vague, off-topic, or personal questions that do not relate\
            \ to medical equipment, rooms, templates, or projects.\n\n✅ Match Examples:\n\
            \n    “What day is it today?”\n\n    “Can I talk to a real person?”\n\n\
            \    “Hi”\n\n    “What does this bot do?”\n\n    “Thanks for your help”\n\
            \n    “How do you work?”\n\n\U0001F50D Keywords to look for (loose):\n\
            “today,” “time,” “date,” “assistant,” “chat,” “hi,” “hello,” “can you\
            \ help,” “bot,” “real person,” “what can you do”\n\n❌ DO NOT MATCH IF:\n\
            \n    The user is clearly asking for equipment recommendations for rooms\
            \ (Class 1)\n\n    The user is asking for project-level or procurement\
            \ data (Class 2)"
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        query_variable_selector:
        - '1741907934263'
        - sys.query
        selected: false
        title: Question Classifier
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 2188
      id: '1743519049332'
      position:
        x: -189.68927718679586
        y: -854.3442106858986
      positionAbsolute:
        x: -189.68927718679586
        y: -854.3442106858986
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '17440714158190'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: NavidataAiAgent
          provider: langgenius/azure_openai/azure_openai
        prompt_template:
        - id: 788995fe-30de-4967-8f5b-b3d2a87ab37f
          role: system
          text: "You are an AI assistant that helps users identify the medical equipment\
            \ required for specific room types using structured data.\n\n\U0001F4AC\
            \ User Question:\n{{#sys.query#}}\n\n\U0001F4E6 Retrieved Data:\n{{#context#}}\n\
            \n\U0001F9E0 Task:\n- Carefully extract and summarize the equipment associated\
            \ with each room name from the provided content.\n- Organize the output\
            \ by room template (`template_name`) and list all relevant items with\
            \ their quantity (`item_qty_per_room`).\n\n\U0001F4DD Response Format:\n\
            Here’s a list of equipment needed for [Room Template Name]:\n- [Item Name]\
            \ — Qty: [Quantity]\n- [Item Name] — Qty: [Quantity]\n...\n\n✅ Output\
            \ Guidelines:\n- Only include exact matches from the data. Do not infer\
            \ or guess equipment.\n- If the user asks about multiple rooms, group\
            \ results clearly by room.\n- If there’s no data match, say:\n  \"Sorry,\
            \ I couldn’t find any equipment info for that room. Please try another\
            \ one.\"\n\n⚠️ Do not hallucinate or fabricate data. Only use facts from\
            \ the provided context.\n"
        selected: false
        title: Room-Based Equipment Recommendation
        type: llm
        variables: []
        vision:
          enabled: false
      height: 111
      id: '1743519067048'
      position:
        x: 455.89851472360044
        y: -574.8126542706356
      positionAbsolute:
        x: 455.89851472360044
        y: -574.8126542706356
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1743519067048.text#}}


          The above data is coming from a generalized  template data.'
        desc: ''
        selected: false
        title: Answer 6
        type: answer
        variables: []
      height: 162
      id: '1743519076427'
      position:
        x: 810.0922604141639
        y: -574.8126542706356
      positionAbsolute:
        x: 810.0922604141639
        y: -574.8126542706356
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1743882676688.text#}}'
        desc: ''
        selected: false
        title: Answer
        type: answer
        variables: []
      height: 122
      id: '1743882314671'
      position:
        x: 584.5447475968645
        y: 313.8108728938101
      positionAbsolute:
        x: 584.5447475968645
        y: 313.8108728938101
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        agent_parameters:
          instruction:
            type: constant
            value: 'You are a helpful assistant that can answer user questions using
              tools like current time and web search. If the user asks about today’s
              date, time, or other real-time facts, use the appropriate tool. Always
              respond clearly and conversationally.

              '
          model:
            type: constant
            value:
              completion_params: {}
              mode: chat
              model: NavidataAiAgent
              model_type: llm
              provider: langgenius/azure_openai/azure_openai
              type: model-selector
          query:
            type: constant
            value: 'User asked: {{#sys.query#}}


              If the user asks something that requires today’s date or current time,
              call the "Current Time" tool to get it.


              If the user asks to search the web, call the "Web Scraper" tool to get
              it.

              '
          tools:
            type: constant
            value:
            - enabled: true
              extra:
                description: ''
              parameters: {}
              provider_name: time
              schemas:
              - auto_generate: null
                default: '%Y-%m-%d %H:%M:%S'
                form: form
                human_description:
                  en_US: Time format in strftime standard.
                  ja_JP: Time format in strftime standard.
                  pt_BR: Time format in strftime standard.
                  zh_Hans: strftime 标准的时间格式。
                label:
                  en_US: Format
                  ja_JP: Format
                  pt_BR: Format
                  zh_Hans: 格式
                llm_description: null
                max: null
                min: null
                name: format
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: UTC
                form: form
                human_description:
                  en_US: Timezone
                  ja_JP: Timezone
                  pt_BR: Timezone
                  zh_Hans: 时区
                label:
                  en_US: Timezone
                  ja_JP: Timezone
                  pt_BR: Timezone
                  zh_Hans: 时区
                llm_description: null
                max: null
                min: null
                name: timezone
                options:
                - label:
                    en_US: UTC
                    ja_JP: UTC
                    pt_BR: UTC
                    zh_Hans: UTC
                  value: UTC
                - label:
                    en_US: America/New_York
                    ja_JP: America/New_York
                    pt_BR: America/New_York
                    zh_Hans: 美洲/纽约
                  value: America/New_York
                - label:
                    en_US: America/Los_Angeles
                    ja_JP: America/Los_Angeles
                    pt_BR: America/Los_Angeles
                    zh_Hans: 美洲/洛杉矶
                  value: America/Los_Angeles
                - label:
                    en_US: America/Chicago
                    ja_JP: America/Chicago
                    pt_BR: America/Chicago
                    zh_Hans: 美洲/芝加哥
                  value: America/Chicago
                - label:
                    en_US: America/Sao_Paulo
                    ja_JP: America/Sao_Paulo
                    pt_BR: América/São Paulo
                    zh_Hans: 美洲/圣保罗
                  value: America/Sao_Paulo
                - label:
                    en_US: Asia/Shanghai
                    ja_JP: Asia/Shanghai
                    pt_BR: Asia/Shanghai
                    zh_Hans: 亚洲/上海
                  value: Asia/Shanghai
                - label:
                    en_US: Asia/Ho_Chi_Minh
                    ja_JP: Asia/Ho_Chi_Minh
                    pt_BR: Ásia/Ho Chi Minh
                    zh_Hans: 亚洲/胡志明市
                  value: Asia/Ho_Chi_Minh
                - label:
                    en_US: Asia/Tokyo
                    ja_JP: Asia/Tokyo
                    pt_BR: Asia/Tokyo
                    zh_Hans: 亚洲/东京
                  value: Asia/Tokyo
                - label:
                    en_US: Asia/Dubai
                    ja_JP: Asia/Dubai
                    pt_BR: Asia/Dubai
                    zh_Hans: 亚洲/迪拜
                  value: Asia/Dubai
                - label:
                    en_US: Asia/Kolkata
                    ja_JP: Asia/Kolkata
                    pt_BR: Asia/Kolkata
                    zh_Hans: 亚洲/加尔各答
                  value: Asia/Kolkata
                - label:
                    en_US: Asia/Seoul
                    ja_JP: Asia/Seoul
                    pt_BR: Asia/Seoul
                    zh_Hans: 亚洲/首尔
                  value: Asia/Seoul
                - label:
                    en_US: Asia/Singapore
                    ja_JP: Asia/Singapore
                    pt_BR: Asia/Singapore
                    zh_Hans: 亚洲/新加坡
                  value: Asia/Singapore
                - label:
                    en_US: Europe/London
                    ja_JP: Europe/London
                    pt_BR: Europe/London
                    zh_Hans: 欧洲/伦敦
                  value: Europe/London
                - label:
                    en_US: Europe/Berlin
                    ja_JP: Europe/Berlin
                    pt_BR: Europe/Berlin
                    zh_Hans: 欧洲/柏林
                  value: Europe/Berlin
                - label:
                    en_US: Europe/Moscow
                    ja_JP: Europe/Moscow
                    pt_BR: Europe/Moscow
                    zh_Hans: 欧洲/莫斯科
                  value: Europe/Moscow
                - label:
                    en_US: Australia/Sydney
                    ja_JP: Australia/Sydney
                    pt_BR: Australia/Sydney
                    zh_Hans: 澳大利亚/悉尼
                  value: Australia/Sydney
                - label:
                    en_US: Pacific/Auckland
                    ja_JP: Pacific/Auckland
                    pt_BR: Pacific/Auckland
                    zh_Hans: 太平洋/奥克兰
                  value: Pacific/Auckland
                - label:
                    en_US: Africa/Cairo
                    ja_JP: Africa/Cairo
                    pt_BR: Africa/Cairo
                    zh_Hans: 非洲/开罗
                  value: Africa/Cairo
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: select
              settings:
                format:
                  value: '%Y-%m-%d %H:%M:%S'
                timezone:
                  value: America/Los_Angeles
              tool_label: Current Time
              tool_name: current_time
              type: builtin
            - enabled: true
              extra:
                description: ''
              parameters:
                url:
                  auto: 1
                  value: null
              provider_name: webscraper
              schemas:
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: used for linking to webpages
                  ja_JP: used for linking to webpages
                  pt_BR: used for linking to webpages
                  zh_Hans: 用于链接到网页
                label:
                  en_US: URL
                  ja_JP: URL
                  pt_BR: URL
                  zh_Hans: 网页链接
                llm_description: url for scraping
                max: null
                min: null
                name: url
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
                  (KHTML, like Gecko) Chrome/100.0.1000.0 Safari/537.36
                form: form
                human_description:
                  en_US: used for identifying the browser.
                  ja_JP: used for identifying the browser.
                  pt_BR: used for identifying the browser.
                  zh_Hans: 用于识别浏览器。
                label:
                  en_US: User Agent
                  ja_JP: User Agent
                  pt_BR: User Agent
                  zh_Hans: User Agent
                llm_description: null
                max: null
                min: null
                name: user_agent
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: 'false'
                form: form
                human_description:
                  en_US: If true, the crawler will only return the page summary content.
                  ja_JP: If true, the crawler will only return the page summary content.
                  pt_BR: If true, the crawler will only return the page summary content.
                  zh_Hans: 如果启用，爬虫将仅返回页面摘要内容。
                label:
                  en_US: Whether to generate summary
                  ja_JP: Whether to generate summary
                  pt_BR: Whether to generate summary
                  zh_Hans: 是否生成摘要
                llm_description: null
                max: null
                min: null
                name: generate_summary
                options:
                - label:
                    en_US: 'Yes'
                    ja_JP: 'Yes'
                    pt_BR: 'Yes'
                    zh_Hans: 是
                  value: 'true'
                - label:
                    en_US: 'No'
                    ja_JP: 'No'
                    pt_BR: 'No'
                    zh_Hans: 否
                  value: 'false'
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              settings:
                generate_summary:
                  value: 'false'
                user_agent:
                  value: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
                    (KHTML, like Gecko) Chrome/100.0.1000.0 Safari/537.36
              tool_label: Web Scraper
              tool_name: webscraper
              type: builtin
        agent_strategy_label: FunctionCalling
        agent_strategy_name: function_calling
        agent_strategy_provider_name: langgenius/agent/agent
        desc: ''
        output_schema: null
        plugin_unique_identifier: langgenius/agent:0.0.8@6dd1206901fa166f1a631fb3f0f8eb08f9e7cf54043b7fe45fcb011218cad7a2
        selected: false
        title: Agent
        type: agent
      height: 236
      id: '1743882676688'
      position:
        x: 260.438283563644
        y: 318.35430755489574
      positionAbsolute:
        x: 260.438283563644
        y: 318.35430755489574
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nimport requests\n\ndef main():\n    api_url = \"https://hepsai-auth-c6e7ghhwcrfmajaa.canadacentral-01.azurewebsites.net/api/generic/crud\"\
          \n\n    request_body = {\n        \"resource\": \"data_table\",\n      \
          \  \"action\": \"get\",\n        \"data\": {\n            \"project_id\"\
          : 0,\n            \"site_id\": 0,\n            \"view_name\": \"vw_template_test\"\
          ,\n            \"page_number\": 1,\n            \"page_size\": 100,\n  \
          \          \"search_string\": None,\n            \"is_project_site_filter\"\
          : 0,\n            \"filter_list\": None\n        },\n        \"by_whom_id\"\
          : 1\n    }\n\n    headers = {\n        \"Content-Type\": \"application/json\"\
          ,\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOi0xLCJ1c2VybmFtZSI6InN1cHBvcnRAbmF2aWRhdGEuY2EiLCJpYXQiOjE3NDE2Mjg2NTh9.MKbOgb8KoGnxgtuRaFBDkPlPMa9LLO9sGFmH_H7zbtY\"\
          \n    }\n\n    try:\n        response = requests.post(api_url, json=request_body,\
          \ headers=headers)\n        if response.status_code == 200:\n          \
          \  data = response.json()\n            equipment_list = data.get(\"result\"\
          , {}).get(\"list\", [])\n            return {\"result\": json.dumps(equipment_list)}\
          \  # \U0001F448 converted to string\n        else:\n            return {\"\
          result\": json.dumps({\"error\": f\"Request failed with status {response.status_code}:\
          \ {response.text}\"})}\n    except Exception as e:\n        return {\"result\"\
          : json.dumps({\"error\": str(e)})}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get equipment by room list from templates
        type: code
        variables: []
      height: 66
      id: '17440714158190'
      position:
        x: 143.22221252842178
        y: -574.8126542706356
      positionAbsolute:
        x: 143.22221252842178
        y: -574.8126542706356
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -724.1524022969515
      y: 363.99609243508496
      zoom: 0.6358102637163321
